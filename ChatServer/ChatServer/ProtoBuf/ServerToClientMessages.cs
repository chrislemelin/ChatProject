// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_to_client_messages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from server_to_client_messages.proto</summary>
public static partial class ServerToClientMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for server_to_client_messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerToClientMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9zZXJ2ZXJfdG9fY2xpZW50X21lc3NhZ2VzLnByb3RvIiAKDUF1dGhlbnRp",
          "Y2F0ZWQSDwoHc3VjY2VzcxgBIAEoCCIjChBSZWdpc3RlclJlc3BvbnNlEg8K",
          "B3N1Y2Nlc3MYASABKAgiHAoLVXBkYXRlTG9iYnkSDQoFbmFtZXMYASADKAki",
          "GwoKVXBkYXRlUm9vbRINCgVuYW1lcxgBIAMoCSK5AQoQU0NNZXNzYWdlV3Jh",
          "cHBlchInCg1hdXRoZW50aWNhdGVkGAEgASgLMg4uQXV0aGVudGljYXRlZEgA",
          "EiMKC3VwZGF0ZUxvYmJ5GAIgASgLMgwuVXBkYXRlTG9iYnlIABIhCgp1cGRh",
          "dGVSb29tGAMgASgLMgsuVXBkYXRlUm9vbUgAEi0KEHJlZ2lzdGVyUmVzcG9u",
          "c2UYBCABKAsyES5SZWdpc3RlclJlc3BvbnNlSABCBQoDbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Authenticated), global::Authenticated.Parser, new[]{ "Success" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterResponse), global::RegisterResponse.Parser, new[]{ "Success" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLobby), global::UpdateLobby.Parser, new[]{ "Names" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoom), global::UpdateRoom.Parser, new[]{ "Names" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SCMessageWrapper), global::SCMessageWrapper.Parser, new[]{ "Authenticated", "UpdateLobby", "UpdateRoom", "RegisterResponse" }, new[]{ "Msg" }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Authenticated : pb::IMessage<Authenticated> {
  private static readonly pb::MessageParser<Authenticated> _parser = new pb::MessageParser<Authenticated>(() => new Authenticated());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Authenticated> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated(Authenticated other) : this() {
    success_ = other.success_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated Clone() {
    return new Authenticated(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Authenticated);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Authenticated other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Authenticated other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
  private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse(RegisterResponse other) : this() {
    success_ = other.success_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse Clone() {
    return new RegisterResponse(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateLobby : pb::IMessage<UpdateLobby> {
  private static readonly pb::MessageParser<UpdateLobby> _parser = new pb::MessageParser<UpdateLobby>(() => new UpdateLobby());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLobby> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby(UpdateLobby other) : this() {
    names_ = other.names_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby Clone() {
    return new UpdateLobby(this);
  }

  /// <summary>Field number for the "names" field.</summary>
  public const int NamesFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_names_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Names {
    get { return names_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLobby);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLobby other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!names_.Equals(other.names_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= names_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    names_.WriteTo(output, _repeated_names_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += names_.CalculateSize(_repeated_names_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLobby other) {
    if (other == null) {
      return;
    }
    names_.Add(other.names_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          names_.AddEntriesFrom(input, _repeated_names_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateRoom : pb::IMessage<UpdateRoom> {
  private static readonly pb::MessageParser<UpdateRoom> _parser = new pb::MessageParser<UpdateRoom>(() => new UpdateRoom());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoom> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom(UpdateRoom other) : this() {
    names_ = other.names_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom Clone() {
    return new UpdateRoom(this);
  }

  /// <summary>Field number for the "names" field.</summary>
  public const int NamesFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_names_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Names {
    get { return names_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoom);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoom other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!names_.Equals(other.names_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= names_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    names_.WriteTo(output, _repeated_names_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += names_.CalculateSize(_repeated_names_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoom other) {
    if (other == null) {
      return;
    }
    names_.Add(other.names_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          names_.AddEntriesFrom(input, _repeated_names_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class SCMessageWrapper : pb::IMessage<SCMessageWrapper> {
  private static readonly pb::MessageParser<SCMessageWrapper> _parser = new pb::MessageParser<SCMessageWrapper>(() => new SCMessageWrapper());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SCMessageWrapper> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper(SCMessageWrapper other) : this() {
    switch (other.MsgCase) {
      case MsgOneofCase.Authenticated:
        Authenticated = other.Authenticated.Clone();
        break;
      case MsgOneofCase.UpdateLobby:
        UpdateLobby = other.UpdateLobby.Clone();
        break;
      case MsgOneofCase.UpdateRoom:
        UpdateRoom = other.UpdateRoom.Clone();
        break;
      case MsgOneofCase.RegisterResponse:
        RegisterResponse = other.RegisterResponse.Clone();
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper Clone() {
    return new SCMessageWrapper(this);
  }

  /// <summary>Field number for the "authenticated" field.</summary>
  public const int AuthenticatedFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Authenticated Authenticated {
    get { return msgCase_ == MsgOneofCase.Authenticated ? (global::Authenticated) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Authenticated;
    }
  }

  /// <summary>Field number for the "updateLobby" field.</summary>
  public const int UpdateLobbyFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLobby UpdateLobby {
    get { return msgCase_ == MsgOneofCase.UpdateLobby ? (global::UpdateLobby) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.UpdateLobby;
    }
  }

  /// <summary>Field number for the "updateRoom" field.</summary>
  public const int UpdateRoomFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRoom UpdateRoom {
    get { return msgCase_ == MsgOneofCase.UpdateRoom ? (global::UpdateRoom) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.UpdateRoom;
    }
  }

  /// <summary>Field number for the "registerResponse" field.</summary>
  public const int RegisterResponseFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterResponse RegisterResponse {
    get { return msgCase_ == MsgOneofCase.RegisterResponse ? (global::RegisterResponse) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.RegisterResponse;
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    Authenticated = 1,
    UpdateLobby = 2,
    UpdateRoom = 3,
    RegisterResponse = 4,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SCMessageWrapper);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SCMessageWrapper other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Authenticated, other.Authenticated)) return false;
    if (!object.Equals(UpdateLobby, other.UpdateLobby)) return false;
    if (!object.Equals(UpdateRoom, other.UpdateRoom)) return false;
    if (!object.Equals(RegisterResponse, other.RegisterResponse)) return false;
    if (MsgCase != other.MsgCase) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (msgCase_ == MsgOneofCase.Authenticated) hash ^= Authenticated.GetHashCode();
    if (msgCase_ == MsgOneofCase.UpdateLobby) hash ^= UpdateLobby.GetHashCode();
    if (msgCase_ == MsgOneofCase.UpdateRoom) hash ^= UpdateRoom.GetHashCode();
    if (msgCase_ == MsgOneofCase.RegisterResponse) hash ^= RegisterResponse.GetHashCode();
    hash ^= (int) msgCase_;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (msgCase_ == MsgOneofCase.Authenticated) {
      output.WriteRawTag(10);
      output.WriteMessage(Authenticated);
    }
    if (msgCase_ == MsgOneofCase.UpdateLobby) {
      output.WriteRawTag(18);
      output.WriteMessage(UpdateLobby);
    }
    if (msgCase_ == MsgOneofCase.UpdateRoom) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateRoom);
    }
    if (msgCase_ == MsgOneofCase.RegisterResponse) {
      output.WriteRawTag(34);
      output.WriteMessage(RegisterResponse);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (msgCase_ == MsgOneofCase.Authenticated) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authenticated);
    }
    if (msgCase_ == MsgOneofCase.UpdateLobby) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLobby);
    }
    if (msgCase_ == MsgOneofCase.UpdateRoom) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRoom);
    }
    if (msgCase_ == MsgOneofCase.RegisterResponse) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterResponse);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SCMessageWrapper other) {
    if (other == null) {
      return;
    }
    switch (other.MsgCase) {
      case MsgOneofCase.Authenticated:
        Authenticated = other.Authenticated;
        break;
      case MsgOneofCase.UpdateLobby:
        UpdateLobby = other.UpdateLobby;
        break;
      case MsgOneofCase.UpdateRoom:
        UpdateRoom = other.UpdateRoom;
        break;
      case MsgOneofCase.RegisterResponse:
        RegisterResponse = other.RegisterResponse;
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          global::Authenticated subBuilder = new global::Authenticated();
          if (msgCase_ == MsgOneofCase.Authenticated) {
            subBuilder.MergeFrom(Authenticated);
          }
          input.ReadMessage(subBuilder);
          Authenticated = subBuilder;
          break;
        }
        case 18: {
          global::UpdateLobby subBuilder = new global::UpdateLobby();
          if (msgCase_ == MsgOneofCase.UpdateLobby) {
            subBuilder.MergeFrom(UpdateLobby);
          }
          input.ReadMessage(subBuilder);
          UpdateLobby = subBuilder;
          break;
        }
        case 26: {
          global::UpdateRoom subBuilder = new global::UpdateRoom();
          if (msgCase_ == MsgOneofCase.UpdateRoom) {
            subBuilder.MergeFrom(UpdateRoom);
          }
          input.ReadMessage(subBuilder);
          UpdateRoom = subBuilder;
          break;
        }
        case 34: {
          global::RegisterResponse subBuilder = new global::RegisterResponse();
          if (msgCase_ == MsgOneofCase.RegisterResponse) {
            subBuilder.MergeFrom(RegisterResponse);
          }
          input.ReadMessage(subBuilder);
          RegisterResponse = subBuilder;
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
