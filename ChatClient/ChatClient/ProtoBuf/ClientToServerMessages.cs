// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_to_server_messages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client_to_server_messages.proto</summary>
public static partial class ClientToServerMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for client_to_server_messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientToServerMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9jbGllbnRfdG9fc2VydmVyX21lc3NhZ2VzLnByb3RvIi8KCFJlZ2lzdGVy",
          "EhAKCFVzZXJuYW1lGAEgASgJEhEKCVBhc3N3b3JkMRgCIAEoBSInCgVMb2dp",
          "bhIMCgRuYW1lGAEgASgJEhAKCFBhc3N3b3JkGAIgASgFIhcKCUpvaW5Mb2Ji",
          "eRIKCgJpZBgBIAEoBSIiCgtTZW5kTWVzc2FnZRITCgttZXNzYWdlQm9keRgB",
          "IAEoCSIZCghNYWtlUm9vbRINCgV0aXRsZRgBIAEoCSK2AQoQQ1NNZXNzYWdl",
          "V3JhcHBlchIXCgVsb2dpbhgBIAEoCzIGLkxvZ2luSAASHwoJam9pbkxvYmJ5",
          "GAIgASgLMgouSm9pbkxvYmJ5SAASIwoLc2VuZE1lc3NhZ2UYAyABKAsyDC5T",
          "ZW5kTWVzc2FnZUgAEh0KCG1ha2VSb29tGAQgASgLMgkuTWFrZVJvb21IABId",
          "CghSZWdpc3RlchgFIAEoCzIJLlJlZ2lzdGVySABCBQoDbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Register), global::Register.Parser, new[]{ "Username", "Password1" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Login), global::Login.Parser, new[]{ "Name", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::JoinLobby), global::JoinLobby.Parser, new[]{ "Id" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendMessage), global::SendMessage.Parser, new[]{ "MessageBody" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MakeRoom), global::MakeRoom.Parser, new[]{ "Title" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSMessageWrapper), global::CSMessageWrapper.Parser, new[]{ "Login", "JoinLobby", "SendMessage", "MakeRoom", "Register" }, new[]{ "Msg" }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Register : pb::IMessage<Register> {
  private static readonly pb::MessageParser<Register> _parser = new pb::MessageParser<Register>(() => new Register());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Register> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Register() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Register(Register other) : this() {
    username_ = other.username_;
    password1_ = other.password1_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Register Clone() {
    return new Register(this);
  }

  /// <summary>Field number for the "Username" field.</summary>
  public const int UsernameFieldNumber = 1;
  private string username_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Username {
    get { return username_; }
    set {
      username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Password1" field.</summary>
  public const int Password1FieldNumber = 2;
  private int password1_;
  /// <summary>
  ///int32 Password2 = 3;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Password1 {
    get { return password1_; }
    set {
      password1_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Register);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Register other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Username != other.Username) return false;
    if (Password1 != other.Password1) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Username.Length != 0) hash ^= Username.GetHashCode();
    if (Password1 != 0) hash ^= Password1.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Username.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Username);
    }
    if (Password1 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Password1);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Username.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
    }
    if (Password1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Password1);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Register other) {
    if (other == null) {
      return;
    }
    if (other.Username.Length != 0) {
      Username = other.Username;
    }
    if (other.Password1 != 0) {
      Password1 = other.Password1;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Username = input.ReadString();
          break;
        }
        case 16: {
          Password1 = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Login : pb::IMessage<Login> {
  private static readonly pb::MessageParser<Login> _parser = new pb::MessageParser<Login>(() => new Login());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Login> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Login() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Login(Login other) : this() {
    name_ = other.name_;
    password_ = other.password_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Login Clone() {
    return new Login(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private int password_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Password {
    get { return password_; }
    set {
      password_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Login);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Login other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Password != other.Password) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Password != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Password != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Password);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Password != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Password);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Login other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Password != 0) {
      Password = other.Password;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Password = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class JoinLobby : pb::IMessage<JoinLobby> {
  private static readonly pb::MessageParser<JoinLobby> _parser = new pb::MessageParser<JoinLobby>(() => new JoinLobby());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<JoinLobby> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JoinLobby() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JoinLobby(JoinLobby other) : this() {
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JoinLobby Clone() {
    return new JoinLobby(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as JoinLobby);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(JoinLobby other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(JoinLobby other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class SendMessage : pb::IMessage<SendMessage> {
  private static readonly pb::MessageParser<SendMessage> _parser = new pb::MessageParser<SendMessage>(() => new SendMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessage(SendMessage other) : this() {
    messageBody_ = other.messageBody_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendMessage Clone() {
    return new SendMessage(this);
  }

  /// <summary>Field number for the "messageBody" field.</summary>
  public const int MessageBodyFieldNumber = 1;
  private string messageBody_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageBody {
    get { return messageBody_; }
    set {
      messageBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageBody != other.MessageBody) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MessageBody.Length != 0) hash ^= MessageBody.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MessageBody.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MessageBody);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MessageBody.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageBody);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendMessage other) {
    if (other == null) {
      return;
    }
    if (other.MessageBody.Length != 0) {
      MessageBody = other.MessageBody;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          MessageBody = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class MakeRoom : pb::IMessage<MakeRoom> {
  private static readonly pb::MessageParser<MakeRoom> _parser = new pb::MessageParser<MakeRoom>(() => new MakeRoom());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MakeRoom> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoom() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoom(MakeRoom other) : this() {
    title_ = other.title_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoom Clone() {
    return new MakeRoom(this);
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 1;
  private string title_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MakeRoom);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MakeRoom other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Title != other.Title) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Title.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Title);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MakeRoom other) {
    if (other == null) {
      return;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Title = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CSMessageWrapper : pb::IMessage<CSMessageWrapper> {
  private static readonly pb::MessageParser<CSMessageWrapper> _parser = new pb::MessageParser<CSMessageWrapper>(() => new CSMessageWrapper());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CSMessageWrapper> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientToServerMessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSMessageWrapper() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSMessageWrapper(CSMessageWrapper other) : this() {
    switch (other.MsgCase) {
      case MsgOneofCase.Login:
        Login = other.Login.Clone();
        break;
      case MsgOneofCase.JoinLobby:
        JoinLobby = other.JoinLobby.Clone();
        break;
      case MsgOneofCase.SendMessage:
        SendMessage = other.SendMessage.Clone();
        break;
      case MsgOneofCase.MakeRoom:
        MakeRoom = other.MakeRoom.Clone();
        break;
      case MsgOneofCase.Register:
        Register = other.Register.Clone();
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSMessageWrapper Clone() {
    return new CSMessageWrapper(this);
  }

  /// <summary>Field number for the "login" field.</summary>
  public const int LoginFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Login Login {
    get { return msgCase_ == MsgOneofCase.Login ? (global::Login) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Login;
    }
  }

  /// <summary>Field number for the "joinLobby" field.</summary>
  public const int JoinLobbyFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::JoinLobby JoinLobby {
    get { return msgCase_ == MsgOneofCase.JoinLobby ? (global::JoinLobby) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.JoinLobby;
    }
  }

  /// <summary>Field number for the "sendMessage" field.</summary>
  public const int SendMessageFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SendMessage SendMessage {
    get { return msgCase_ == MsgOneofCase.SendMessage ? (global::SendMessage) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.SendMessage;
    }
  }

  /// <summary>Field number for the "makeRoom" field.</summary>
  public const int MakeRoomFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MakeRoom MakeRoom {
    get { return msgCase_ == MsgOneofCase.MakeRoom ? (global::MakeRoom) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.MakeRoom;
    }
  }

  /// <summary>Field number for the "Register" field.</summary>
  public const int RegisterFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Register Register {
    get { return msgCase_ == MsgOneofCase.Register ? (global::Register) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Register;
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    Login = 1,
    JoinLobby = 2,
    SendMessage = 3,
    MakeRoom = 4,
    Register = 5,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CSMessageWrapper);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CSMessageWrapper other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Login, other.Login)) return false;
    if (!object.Equals(JoinLobby, other.JoinLobby)) return false;
    if (!object.Equals(SendMessage, other.SendMessage)) return false;
    if (!object.Equals(MakeRoom, other.MakeRoom)) return false;
    if (!object.Equals(Register, other.Register)) return false;
    if (MsgCase != other.MsgCase) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (msgCase_ == MsgOneofCase.Login) hash ^= Login.GetHashCode();
    if (msgCase_ == MsgOneofCase.JoinLobby) hash ^= JoinLobby.GetHashCode();
    if (msgCase_ == MsgOneofCase.SendMessage) hash ^= SendMessage.GetHashCode();
    if (msgCase_ == MsgOneofCase.MakeRoom) hash ^= MakeRoom.GetHashCode();
    if (msgCase_ == MsgOneofCase.Register) hash ^= Register.GetHashCode();
    hash ^= (int) msgCase_;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (msgCase_ == MsgOneofCase.Login) {
      output.WriteRawTag(10);
      output.WriteMessage(Login);
    }
    if (msgCase_ == MsgOneofCase.JoinLobby) {
      output.WriteRawTag(18);
      output.WriteMessage(JoinLobby);
    }
    if (msgCase_ == MsgOneofCase.SendMessage) {
      output.WriteRawTag(26);
      output.WriteMessage(SendMessage);
    }
    if (msgCase_ == MsgOneofCase.MakeRoom) {
      output.WriteRawTag(34);
      output.WriteMessage(MakeRoom);
    }
    if (msgCase_ == MsgOneofCase.Register) {
      output.WriteRawTag(42);
      output.WriteMessage(Register);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (msgCase_ == MsgOneofCase.Login) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Login);
    }
    if (msgCase_ == MsgOneofCase.JoinLobby) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinLobby);
    }
    if (msgCase_ == MsgOneofCase.SendMessage) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendMessage);
    }
    if (msgCase_ == MsgOneofCase.MakeRoom) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeRoom);
    }
    if (msgCase_ == MsgOneofCase.Register) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Register);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CSMessageWrapper other) {
    if (other == null) {
      return;
    }
    switch (other.MsgCase) {
      case MsgOneofCase.Login:
        Login = other.Login;
        break;
      case MsgOneofCase.JoinLobby:
        JoinLobby = other.JoinLobby;
        break;
      case MsgOneofCase.SendMessage:
        SendMessage = other.SendMessage;
        break;
      case MsgOneofCase.MakeRoom:
        MakeRoom = other.MakeRoom;
        break;
      case MsgOneofCase.Register:
        Register = other.Register;
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          global::Login subBuilder = new global::Login();
          if (msgCase_ == MsgOneofCase.Login) {
            subBuilder.MergeFrom(Login);
          }
          input.ReadMessage(subBuilder);
          Login = subBuilder;
          break;
        }
        case 18: {
          global::JoinLobby subBuilder = new global::JoinLobby();
          if (msgCase_ == MsgOneofCase.JoinLobby) {
            subBuilder.MergeFrom(JoinLobby);
          }
          input.ReadMessage(subBuilder);
          JoinLobby = subBuilder;
          break;
        }
        case 26: {
          global::SendMessage subBuilder = new global::SendMessage();
          if (msgCase_ == MsgOneofCase.SendMessage) {
            subBuilder.MergeFrom(SendMessage);
          }
          input.ReadMessage(subBuilder);
          SendMessage = subBuilder;
          break;
        }
        case 34: {
          global::MakeRoom subBuilder = new global::MakeRoom();
          if (msgCase_ == MsgOneofCase.MakeRoom) {
            subBuilder.MergeFrom(MakeRoom);
          }
          input.ReadMessage(subBuilder);
          MakeRoom = subBuilder;
          break;
        }
        case 42: {
          global::Register subBuilder = new global::Register();
          if (msgCase_ == MsgOneofCase.Register) {
            subBuilder.MergeFrom(Register);
          }
          input.ReadMessage(subBuilder);
          Register = subBuilder;
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
