// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_to_client_messages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from server_to_client_messages.proto</summary>
public static partial class ServerToClientMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for server_to_client_messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerToClientMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9zZXJ2ZXJfdG9fY2xpZW50X21lc3NhZ2VzLnByb3RvGh9nb29nbGUvcHJv",
          "dG9idWYvdGltZXN0YW1wLnByb3RvIiAKDUF1dGhlbnRpY2F0ZWQSDwoHc3Vj",
          "Y2VzcxgBIAEoCCIjChBSZWdpc3RlclJlc3BvbnNlEg8KB3N1Y2Nlc3MYASAB",
          "KAgiIwoQTWFrZVJvb21SZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIkQKClVw",
          "ZGF0ZVJvb20SCgoCaWQYASABKAUSKgoQdXBkYWdlUm9vbVBpZWNlcxgCIAMo",
          "CzIQLlVwZGF0ZVJvb21QaWVjZSJwCg9VcGRhdGVSb29tUGllY2USDgoGYXV0",
          "aG9yGAEgASgJEhMKC21lc3NhZ2VUZXh0GAIgASgJEg4KBnJvb21JRBgDIAEo",
          "BRIoCgR0aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCI7",
          "CgtVcGRhdGVMb2JieRIsChF1cGRhdGVMb2JieVBpZWNlcxgBIAMoCzIRLlVw",
          "ZGF0ZUxvYmJ5UGllY2UifAoQVXBkYXRlTG9iYnlQaWVjZRIkCgR0eXBlGAEg",
          "ASgOMhYuVXBkYXRlTG9iYnlQaWVjZS5UeXBlEg0KBXRpdGxlGAIgASgJEgoK",
          "AmlkGAMgASgFIicKBFR5cGUSBwoDQUREEAASCgoGREVMRVRFEAESCgoGTU9E",
          "SUZZEAIi6AEKEFNDTWVzc2FnZVdyYXBwZXISJwoNYXV0aGVudGljYXRlZBgB",
          "IAEoCzIOLkF1dGhlbnRpY2F0ZWRIABIjCgt1cGRhdGVMb2JieRgCIAEoCzIM",
          "LlVwZGF0ZUxvYmJ5SAASIQoKdXBkYXRlUm9vbRgDIAEoCzILLlVwZGF0ZVJv",
          "b21IABItChByZWdpc3RlclJlc3BvbnNlGAQgASgLMhEuUmVnaXN0ZXJSZXNw",
          "b25zZUgAEi0KEE1ha2VSb29tUmVzcG9uc2UYBSABKAsyES5NYWtlUm9vbVJl",
          "c3BvbnNlSABCBQoDbXNnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Authenticated), global::Authenticated.Parser, new[]{ "Success" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterResponse), global::RegisterResponse.Parser, new[]{ "Success" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MakeRoomResponse), global::MakeRoomResponse.Parser, new[]{ "Success" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoom), global::UpdateRoom.Parser, new[]{ "Id", "UpdageRoomPieces" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoomPiece), global::UpdateRoomPiece.Parser, new[]{ "Author", "MessageText", "RoomID", "Time" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLobby), global::UpdateLobby.Parser, new[]{ "UpdateLobbyPieces" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLobbyPiece), global::UpdateLobbyPiece.Parser, new[]{ "Type", "Title", "Id" }, null, new[]{ typeof(global::UpdateLobbyPiece.Types.Type) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SCMessageWrapper), global::SCMessageWrapper.Parser, new[]{ "Authenticated", "UpdateLobby", "UpdateRoom", "RegisterResponse", "MakeRoomResponse" }, new[]{ "Msg" }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Authenticated : pb::IMessage<Authenticated> {
  private static readonly pb::MessageParser<Authenticated> _parser = new pb::MessageParser<Authenticated>(() => new Authenticated());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Authenticated> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated(Authenticated other) : this() {
    success_ = other.success_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Authenticated Clone() {
    return new Authenticated(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Authenticated);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Authenticated other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Authenticated other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
  private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse(RegisterResponse other) : this() {
    success_ = other.success_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse Clone() {
    return new RegisterResponse(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class MakeRoomResponse : pb::IMessage<MakeRoomResponse> {
  private static readonly pb::MessageParser<MakeRoomResponse> _parser = new pb::MessageParser<MakeRoomResponse>(() => new MakeRoomResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MakeRoomResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoomResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoomResponse(MakeRoomResponse other) : this() {
    success_ = other.success_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MakeRoomResponse Clone() {
    return new MakeRoomResponse(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Success {
    get { return success_; }
    set {
      success_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MakeRoomResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MakeRoomResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Success != false) hash ^= Success.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Success != false) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Success != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MakeRoomResponse other) {
    if (other == null) {
      return;
    }
    if (other.Success != false) {
      Success = other.Success;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateRoom : pb::IMessage<UpdateRoom> {
  private static readonly pb::MessageParser<UpdateRoom> _parser = new pb::MessageParser<UpdateRoom>(() => new UpdateRoom());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoom> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom(UpdateRoom other) : this() {
    id_ = other.id_;
    updageRoomPieces_ = other.updageRoomPieces_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoom Clone() {
    return new UpdateRoom(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "updageRoomPieces" field.</summary>
  public const int UpdageRoomPiecesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::UpdateRoomPiece> _repeated_updageRoomPieces_codec
      = pb::FieldCodec.ForMessage(18, global::UpdateRoomPiece.Parser);
  private readonly pbc::RepeatedField<global::UpdateRoomPiece> updageRoomPieces_ = new pbc::RepeatedField<global::UpdateRoomPiece>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UpdateRoomPiece> UpdageRoomPieces {
    get { return updageRoomPieces_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoom);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoom other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if(!updageRoomPieces_.Equals(other.updageRoomPieces_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    hash ^= updageRoomPieces_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    updageRoomPieces_.WriteTo(output, _repeated_updageRoomPieces_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    size += updageRoomPieces_.CalculateSize(_repeated_updageRoomPieces_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoom other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    updageRoomPieces_.Add(other.updageRoomPieces_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 18: {
          updageRoomPieces_.AddEntriesFrom(input, _repeated_updageRoomPieces_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateRoomPiece : pb::IMessage<UpdateRoomPiece> {
  private static readonly pb::MessageParser<UpdateRoomPiece> _parser = new pb::MessageParser<UpdateRoomPiece>(() => new UpdateRoomPiece());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoomPiece> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomPiece() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomPiece(UpdateRoomPiece other) : this() {
    author_ = other.author_;
    messageText_ = other.messageText_;
    roomID_ = other.roomID_;
    Time = other.time_ != null ? other.Time.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomPiece Clone() {
    return new UpdateRoomPiece(this);
  }

  /// <summary>Field number for the "author" field.</summary>
  public const int AuthorFieldNumber = 1;
  private string author_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Author {
    get { return author_; }
    set {
      author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "messageText" field.</summary>
  public const int MessageTextFieldNumber = 2;
  private string messageText_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageText {
    get { return messageText_; }
    set {
      messageText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomID" field.</summary>
  public const int RoomIDFieldNumber = 3;
  private int roomID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RoomID {
    get { return roomID_; }
    set {
      roomID_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 4;
  private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoomPiece);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoomPiece other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Author != other.Author) return false;
    if (MessageText != other.MessageText) return false;
    if (RoomID != other.RoomID) return false;
    if (!object.Equals(Time, other.Time)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Author.Length != 0) hash ^= Author.GetHashCode();
    if (MessageText.Length != 0) hash ^= MessageText.GetHashCode();
    if (RoomID != 0) hash ^= RoomID.GetHashCode();
    if (time_ != null) hash ^= Time.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Author.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Author);
    }
    if (MessageText.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MessageText);
    }
    if (RoomID != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RoomID);
    }
    if (time_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Time);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Author.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
    }
    if (MessageText.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageText);
    }
    if (RoomID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
    }
    if (time_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoomPiece other) {
    if (other == null) {
      return;
    }
    if (other.Author.Length != 0) {
      Author = other.Author;
    }
    if (other.MessageText.Length != 0) {
      MessageText = other.MessageText;
    }
    if (other.RoomID != 0) {
      RoomID = other.RoomID;
    }
    if (other.time_ != null) {
      if (time_ == null) {
        time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
      }
      Time.MergeFrom(other.Time);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Author = input.ReadString();
          break;
        }
        case 18: {
          MessageText = input.ReadString();
          break;
        }
        case 24: {
          RoomID = input.ReadInt32();
          break;
        }
        case 34: {
          if (time_ == null) {
            time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(time_);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateLobby : pb::IMessage<UpdateLobby> {
  private static readonly pb::MessageParser<UpdateLobby> _parser = new pb::MessageParser<UpdateLobby>(() => new UpdateLobby());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLobby> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby(UpdateLobby other) : this() {
    updateLobbyPieces_ = other.updateLobbyPieces_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobby Clone() {
    return new UpdateLobby(this);
  }

  /// <summary>Field number for the "updateLobbyPieces" field.</summary>
  public const int UpdateLobbyPiecesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UpdateLobbyPiece> _repeated_updateLobbyPieces_codec
      = pb::FieldCodec.ForMessage(10, global::UpdateLobbyPiece.Parser);
  private readonly pbc::RepeatedField<global::UpdateLobbyPiece> updateLobbyPieces_ = new pbc::RepeatedField<global::UpdateLobbyPiece>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UpdateLobbyPiece> UpdateLobbyPieces {
    get { return updateLobbyPieces_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLobby);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLobby other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!updateLobbyPieces_.Equals(other.updateLobbyPieces_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= updateLobbyPieces_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    updateLobbyPieces_.WriteTo(output, _repeated_updateLobbyPieces_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += updateLobbyPieces_.CalculateSize(_repeated_updateLobbyPieces_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLobby other) {
    if (other == null) {
      return;
    }
    updateLobbyPieces_.Add(other.updateLobbyPieces_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          updateLobbyPieces_.AddEntriesFrom(input, _repeated_updateLobbyPieces_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateLobbyPiece : pb::IMessage<UpdateLobbyPiece> {
  private static readonly pb::MessageParser<UpdateLobbyPiece> _parser = new pb::MessageParser<UpdateLobbyPiece>(() => new UpdateLobbyPiece());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLobbyPiece> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobbyPiece() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobbyPiece(UpdateLobbyPiece other) : this() {
    type_ = other.type_;
    title_ = other.title_;
    id_ = other.id_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLobbyPiece Clone() {
    return new UpdateLobbyPiece(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::UpdateLobbyPiece.Types.Type type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLobbyPiece.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 2;
  private string title_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 3;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLobbyPiece);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLobbyPiece other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Title != other.Title) return false;
    if (Id != other.Id) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Title);
    }
    if (Id != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Id);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLobbyPiece other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          type_ = (global::UpdateLobbyPiece.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          Title = input.ReadString();
          break;
        }
        case 24: {
          Id = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the UpdateLobbyPiece message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("ADD")] Add = 0,
      [pbr::OriginalName("DELETE")] Delete = 1,
      [pbr::OriginalName("MODIFY")] Modify = 2,
    }

  }
  #endregion

}

public sealed partial class SCMessageWrapper : pb::IMessage<SCMessageWrapper> {
  private static readonly pb::MessageParser<SCMessageWrapper> _parser = new pb::MessageParser<SCMessageWrapper>(() => new SCMessageWrapper());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SCMessageWrapper> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerToClientMessagesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper(SCMessageWrapper other) : this() {
    switch (other.MsgCase) {
      case MsgOneofCase.Authenticated:
        Authenticated = other.Authenticated.Clone();
        break;
      case MsgOneofCase.UpdateLobby:
        UpdateLobby = other.UpdateLobby.Clone();
        break;
      case MsgOneofCase.UpdateRoom:
        UpdateRoom = other.UpdateRoom.Clone();
        break;
      case MsgOneofCase.RegisterResponse:
        RegisterResponse = other.RegisterResponse.Clone();
        break;
      case MsgOneofCase.MakeRoomResponse:
        MakeRoomResponse = other.MakeRoomResponse.Clone();
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCMessageWrapper Clone() {
    return new SCMessageWrapper(this);
  }

  /// <summary>Field number for the "authenticated" field.</summary>
  public const int AuthenticatedFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Authenticated Authenticated {
    get { return msgCase_ == MsgOneofCase.Authenticated ? (global::Authenticated) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Authenticated;
    }
  }

  /// <summary>Field number for the "updateLobby" field.</summary>
  public const int UpdateLobbyFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLobby UpdateLobby {
    get { return msgCase_ == MsgOneofCase.UpdateLobby ? (global::UpdateLobby) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.UpdateLobby;
    }
  }

  /// <summary>Field number for the "updateRoom" field.</summary>
  public const int UpdateRoomFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRoom UpdateRoom {
    get { return msgCase_ == MsgOneofCase.UpdateRoom ? (global::UpdateRoom) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.UpdateRoom;
    }
  }

  /// <summary>Field number for the "registerResponse" field.</summary>
  public const int RegisterResponseFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterResponse RegisterResponse {
    get { return msgCase_ == MsgOneofCase.RegisterResponse ? (global::RegisterResponse) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.RegisterResponse;
    }
  }

  /// <summary>Field number for the "MakeRoomResponse" field.</summary>
  public const int MakeRoomResponseFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MakeRoomResponse MakeRoomResponse {
    get { return msgCase_ == MsgOneofCase.MakeRoomResponse ? (global::MakeRoomResponse) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.MakeRoomResponse;
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    Authenticated = 1,
    UpdateLobby = 2,
    UpdateRoom = 3,
    RegisterResponse = 4,
    MakeRoomResponse = 5,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SCMessageWrapper);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SCMessageWrapper other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Authenticated, other.Authenticated)) return false;
    if (!object.Equals(UpdateLobby, other.UpdateLobby)) return false;
    if (!object.Equals(UpdateRoom, other.UpdateRoom)) return false;
    if (!object.Equals(RegisterResponse, other.RegisterResponse)) return false;
    if (!object.Equals(MakeRoomResponse, other.MakeRoomResponse)) return false;
    if (MsgCase != other.MsgCase) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (msgCase_ == MsgOneofCase.Authenticated) hash ^= Authenticated.GetHashCode();
    if (msgCase_ == MsgOneofCase.UpdateLobby) hash ^= UpdateLobby.GetHashCode();
    if (msgCase_ == MsgOneofCase.UpdateRoom) hash ^= UpdateRoom.GetHashCode();
    if (msgCase_ == MsgOneofCase.RegisterResponse) hash ^= RegisterResponse.GetHashCode();
    if (msgCase_ == MsgOneofCase.MakeRoomResponse) hash ^= MakeRoomResponse.GetHashCode();
    hash ^= (int) msgCase_;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (msgCase_ == MsgOneofCase.Authenticated) {
      output.WriteRawTag(10);
      output.WriteMessage(Authenticated);
    }
    if (msgCase_ == MsgOneofCase.UpdateLobby) {
      output.WriteRawTag(18);
      output.WriteMessage(UpdateLobby);
    }
    if (msgCase_ == MsgOneofCase.UpdateRoom) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateRoom);
    }
    if (msgCase_ == MsgOneofCase.RegisterResponse) {
      output.WriteRawTag(34);
      output.WriteMessage(RegisterResponse);
    }
    if (msgCase_ == MsgOneofCase.MakeRoomResponse) {
      output.WriteRawTag(42);
      output.WriteMessage(MakeRoomResponse);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (msgCase_ == MsgOneofCase.Authenticated) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authenticated);
    }
    if (msgCase_ == MsgOneofCase.UpdateLobby) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLobby);
    }
    if (msgCase_ == MsgOneofCase.UpdateRoom) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRoom);
    }
    if (msgCase_ == MsgOneofCase.RegisterResponse) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterResponse);
    }
    if (msgCase_ == MsgOneofCase.MakeRoomResponse) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MakeRoomResponse);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SCMessageWrapper other) {
    if (other == null) {
      return;
    }
    switch (other.MsgCase) {
      case MsgOneofCase.Authenticated:
        Authenticated = other.Authenticated;
        break;
      case MsgOneofCase.UpdateLobby:
        UpdateLobby = other.UpdateLobby;
        break;
      case MsgOneofCase.UpdateRoom:
        UpdateRoom = other.UpdateRoom;
        break;
      case MsgOneofCase.RegisterResponse:
        RegisterResponse = other.RegisterResponse;
        break;
      case MsgOneofCase.MakeRoomResponse:
        MakeRoomResponse = other.MakeRoomResponse;
        break;
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          global::Authenticated subBuilder = new global::Authenticated();
          if (msgCase_ == MsgOneofCase.Authenticated) {
            subBuilder.MergeFrom(Authenticated);
          }
          input.ReadMessage(subBuilder);
          Authenticated = subBuilder;
          break;
        }
        case 18: {
          global::UpdateLobby subBuilder = new global::UpdateLobby();
          if (msgCase_ == MsgOneofCase.UpdateLobby) {
            subBuilder.MergeFrom(UpdateLobby);
          }
          input.ReadMessage(subBuilder);
          UpdateLobby = subBuilder;
          break;
        }
        case 26: {
          global::UpdateRoom subBuilder = new global::UpdateRoom();
          if (msgCase_ == MsgOneofCase.UpdateRoom) {
            subBuilder.MergeFrom(UpdateRoom);
          }
          input.ReadMessage(subBuilder);
          UpdateRoom = subBuilder;
          break;
        }
        case 34: {
          global::RegisterResponse subBuilder = new global::RegisterResponse();
          if (msgCase_ == MsgOneofCase.RegisterResponse) {
            subBuilder.MergeFrom(RegisterResponse);
          }
          input.ReadMessage(subBuilder);
          RegisterResponse = subBuilder;
          break;
        }
        case 42: {
          global::MakeRoomResponse subBuilder = new global::MakeRoomResponse();
          if (msgCase_ == MsgOneofCase.MakeRoomResponse) {
            subBuilder.MergeFrom(MakeRoomResponse);
          }
          input.ReadMessage(subBuilder);
          MakeRoomResponse = subBuilder;
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
